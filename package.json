{
    "name": "@jupyterlite/cockle",
    "version": "0.0.5",
    "description": "In browser bash-like shell",
    "homepage": "https://github.com/jupyterlite/cockle",
    "license": "BSD-3-Clause",
    "author": "Ian Thomas",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/jupyterlite/cockle.git"
    },
    "bugs": {
        "url": "https://github.com/jupyterlite/cockle/issues"
    },
    "files": [
        "lib/**/*.{d.ts,eot,gif,html,jpg,js,js.map,json,png,svg,woff2,ttf}",
        "src/**/*.ts"
    ],
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "scripts": {
        "fetch:wasm:create-env": "micromamba create -p $(pwd)/cockle_wasm_env -y cockle_fs grep coreutils --platform=emscripten-wasm32 -c https://repo.mamba.pm/emscripten-forge -c https://repo.mamba.pm/conda-forge",
        "fetch:wasm:copy": "mkdir -p src/wasm && cp -r $(pwd)/cockle_wasm_env/bin/*.js src/wasm",
        "fetch:wasm": "npm run fetch:wasm:create-env && npm run fetch:wasm:copy",
        "build": "tsc",
        "eslint": "npm run eslint:check -- --fix",
        "eslint:check": "eslint . --cache --ext .ts,.tsx",
        "lint": "npm run prettier && npm run eslint",
        "lint:check": "npm run prettier:check && npm run eslint:check",
        "prepack": "npm install && npm run fetch:wasm && npm run build",
        "prettier": "prettier --list-different --write \"**/*{.ts,.tsx,.js,.jsx,.css,.json,.md,.yml}\"",
        "prettier:check": "prettier --list-different \"**/*{.ts,.tsx,.js,.jsx,.css,.json,.md,.yml}\""
    },
    "dependencies": {
        "@jupyterlab/services": "^7.2.4",
        "@jupyterlite/contents": "^0.4.0",
        "comlink": "^4.4.1"
    },
    "devDependencies": {
        "@types/json-schema": "^7.0.15",
        "@types/node": "^20.14.12",
        "@types/react": "^18.2.79",
        "@typescript-eslint/eslint-plugin": "^7.16.1",
        "@typescript-eslint/parser": "^7.16.1",
        "eslint": "^8.56.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-prettier": "^5.1.3",
        "prettier": "^3.3.3",
        "typescript": "^5.4.5"
    },
    "eslintIgnore": [
        "node_modules",
        "dist",
        "coverage",
        "**/*.d.ts",
        "**/package-lock.json"
    ],
    "eslintConfig": {
        "extends": [
            "eslint:recommended",
            "plugin:@typescript-eslint/eslint-recommended",
            "plugin:@typescript-eslint/recommended",
            "plugin:prettier/recommended"
        ],
        "parser": "@typescript-eslint/parser",
        "parserOptions": {
            "sourceType": "module"
        },
        "plugins": [
            "@typescript-eslint"
        ],
        "rules": {
            "@typescript-eslint/naming-convention": [
                "error",
                {
                    "selector": "interface",
                    "format": [
                        "PascalCase"
                    ],
                    "custom": {
                        "regex": "^I[A-Z]",
                        "match": true
                    }
                }
            ],
            "@typescript-eslint/no-unused-vars": [
                "warn",
                {
                    "args": "none"
                }
            ],
            "@typescript-eslint/no-explicit-any": "off",
            "@typescript-eslint/no-namespace": "off",
            "@typescript-eslint/no-use-before-define": "off",
            "@typescript-eslint/quotes": [
                "error",
                "single",
                {
                    "avoidEscape": true,
                    "allowTemplateLiterals": false
                }
            ],
            "curly": [
                "error",
                "all"
            ],
            "eqeqeq": "error",
            "prefer-arrow-callback": "error"
        }
    },
    "prettier": {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "none",
        "arrowParens": "avoid",
        "endOfLine": "auto",
        "overrides": [
            {
                "files": "package.json",
                "options": {
                    "tabWidth": 4
                }
            }
        ]
    },
    "publishConfig": {
        "access": "public"
    }
}
