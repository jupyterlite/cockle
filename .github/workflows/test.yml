name: Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set conda environment
        uses: mamba-org/setup-micromamba@main
        with:
          environment-name: cockle
          environment-file: environment-dev.yml
          init-shell: bash
          cache-downloads: true

      - name: Lint
        run: |
          npm install
          npm run lint:check

  test:
    name: 'End-to-end tests ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set conda environment
        uses: mamba-org/setup-micromamba@main
        with:
          environment-name: cockle
          environment-file: environment-dev.yml
          init-shell: bash
          cache-downloads: true

      - name: Build
        run: |
          npm install
          npm run build

      - name: Run tests
        working-directory: test
        run: |
          npm install
          npx playwright install --with-deps chromium
          npm run build
          npm run test

  ui-test:
    name: Visual tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set conda environment
        uses: mamba-org/setup-micromamba@main
        with:
          environment-name: cockle
          environment-file: environment-dev.yml
          init-shell: bash
          cache-downloads: true

      - name: Build
        run: |
          npm install
          npm run build

      - name: Run visual tests
        working-directory: demo
        run: |
          npm install
          npx playwright install --with-deps chromium
          npm run build
          npm run test

      - name: Upload Playwright Test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cockle-visual-tests
          path: |
            demo/test-results
            demo/playwright-report
